{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, CoreModule } from '@angular/flex-layout/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\nclass GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input) {\n    return buildCss$2(input || ROW_DEFAULT);\n  }\n\n}\n\nGridAlignStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵGridAlignStyleBuilder_BaseFactory;\n  return function GridAlignStyleBuilder_Factory(t) {\n    return (ɵGridAlignStyleBuilder_BaseFactory || (ɵGridAlignStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridAlignStyleBuilder)))(t || GridAlignStyleBuilder);\n  };\n}();\n\nGridAlignStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridAlignStyleBuilder,\n  factory: GridAlignStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridAlignDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-align';\n    this.styleCache = alignCache;\n    this.init();\n  }\n\n}\n\nGridAlignDirective.ɵfac = function GridAlignDirective_Factory(t) {\n  return new (t || GridAlignDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridAlignStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridAlignDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridAlignDirective,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GridAlignStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, null);\n})();\n\nconst alignCache = new Map();\nconst inputs$a = ['gdGridAlign', 'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl', 'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl', 'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'];\nconst selector$a = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n\nclass DefaultGridAlignDirective extends GridAlignDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$a;\n  }\n\n}\n\nDefaultGridAlignDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridAlignDirective_BaseFactory;\n  return function DefaultGridAlignDirective_Factory(t) {\n    return (ɵDefaultGridAlignDirective_BaseFactory || (ɵDefaultGridAlignDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAlignDirective)))(t || DefaultGridAlignDirective);\n  };\n}();\n\nDefaultGridAlignDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridAlignDirective,\n  selectors: [[\"\", \"gdGridAlign\", \"\"], [\"\", \"gdGridAlign.xs\", \"\"], [\"\", \"gdGridAlign.sm\", \"\"], [\"\", \"gdGridAlign.md\", \"\"], [\"\", \"gdGridAlign.lg\", \"\"], [\"\", \"gdGridAlign.xl\", \"\"], [\"\", \"gdGridAlign.lt-sm\", \"\"], [\"\", \"gdGridAlign.lt-md\", \"\"], [\"\", \"gdGridAlign.lt-lg\", \"\"], [\"\", \"gdGridAlign.lt-xl\", \"\"], [\"\", \"gdGridAlign.gt-xs\", \"\"], [\"\", \"gdGridAlign.gt-sm\", \"\"], [\"\", \"gdGridAlign.gt-md\", \"\"], [\"\", \"gdGridAlign.gt-lg\", \"\"]],\n  inputs: {\n    gdGridAlign: \"gdGridAlign\",\n    \"gdGridAlign.xs\": \"gdGridAlign.xs\",\n    \"gdGridAlign.sm\": \"gdGridAlign.sm\",\n    \"gdGridAlign.md\": \"gdGridAlign.md\",\n    \"gdGridAlign.lg\": \"gdGridAlign.lg\",\n    \"gdGridAlign.xl\": \"gdGridAlign.xl\",\n    \"gdGridAlign.lt-sm\": \"gdGridAlign.lt-sm\",\n    \"gdGridAlign.lt-md\": \"gdGridAlign.lt-md\",\n    \"gdGridAlign.lt-lg\": \"gdGridAlign.lt-lg\",\n    \"gdGridAlign.lt-xl\": \"gdGridAlign.lt-xl\",\n    \"gdGridAlign.gt-xs\": \"gdGridAlign.gt-xs\",\n    \"gdGridAlign.gt-sm\": \"gdGridAlign.gt-sm\",\n    \"gdGridAlign.gt-md\": \"gdGridAlign.gt-md\",\n    \"gdGridAlign.gt-lg\": \"gdGridAlign.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAlignDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$a,\n      inputs: inputs$a\n    }]\n  }], null, null);\n})();\n\nfunction buildCss$2(align = '') {\n  const css = {},\n        [rowAxis, columnAxis] = align.split(' '); // Row axis\n\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n\n    default:\n      css['justify-self'] = ROW_DEFAULT; // default row axis\n\n      break;\n  } // Column axis\n\n\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n\n    default:\n      css['align-self'] = COL_DEFAULT; // default column axis\n\n      break;\n  }\n\n  return css;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DEFAULT_MAIN$1 = 'start';\nconst DEFAULT_CROSS$1 = 'stretch';\n\nclass GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    return buildCss$1(input || `${DEFAULT_MAIN$1} ${DEFAULT_CROSS$1}`, parent.inline);\n  }\n\n}\n\nGridAlignColumnsStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵGridAlignColumnsStyleBuilder_BaseFactory;\n  return function GridAlignColumnsStyleBuilder_Factory(t) {\n    return (ɵGridAlignColumnsStyleBuilder_BaseFactory || (ɵGridAlignColumnsStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridAlignColumnsStyleBuilder)))(t || GridAlignColumnsStyleBuilder);\n  };\n}();\n\nGridAlignColumnsStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridAlignColumnsStyleBuilder,\n  factory: GridAlignColumnsStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignColumnsStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridAlignColumnsDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-align-columns';\n    this._inline = false;\n    this.init();\n  }\n\n  get inline() {\n    return this._inline;\n  }\n\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  } // *********************************************\n  // Protected methods\n  // *********************************************\n\n\n  updateWithValue(value) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n\n}\n\nGridAlignColumnsDirective.ɵfac = function GridAlignColumnsDirective_Factory(t) {\n  return new (t || GridAlignColumnsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridAlignColumnsStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridAlignColumnsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridAlignColumnsDirective,\n  inputs: {\n    inline: [\"gdInline\", \"inline\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignColumnsDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GridAlignColumnsStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\n\nconst alignColumnsCache = new Map();\nconst alignColumnsInlineCache = new Map();\nconst inputs$9 = ['gdAlignColumns', 'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md', 'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm', 'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl', 'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md', 'gdAlignColumns.gt-lg'];\nconst selector$9 = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n\nclass DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$9;\n  }\n\n}\n\nDefaultGridAlignColumnsDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridAlignColumnsDirective_BaseFactory;\n  return function DefaultGridAlignColumnsDirective_Factory(t) {\n    return (ɵDefaultGridAlignColumnsDirective_BaseFactory || (ɵDefaultGridAlignColumnsDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAlignColumnsDirective)))(t || DefaultGridAlignColumnsDirective);\n  };\n}();\n\nDefaultGridAlignColumnsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridAlignColumnsDirective,\n  selectors: [[\"\", \"gdAlignColumns\", \"\"], [\"\", \"gdAlignColumns.xs\", \"\"], [\"\", \"gdAlignColumns.sm\", \"\"], [\"\", \"gdAlignColumns.md\", \"\"], [\"\", \"gdAlignColumns.lg\", \"\"], [\"\", \"gdAlignColumns.xl\", \"\"], [\"\", \"gdAlignColumns.lt-sm\", \"\"], [\"\", \"gdAlignColumns.lt-md\", \"\"], [\"\", \"gdAlignColumns.lt-lg\", \"\"], [\"\", \"gdAlignColumns.lt-xl\", \"\"], [\"\", \"gdAlignColumns.gt-xs\", \"\"], [\"\", \"gdAlignColumns.gt-sm\", \"\"], [\"\", \"gdAlignColumns.gt-md\", \"\"], [\"\", \"gdAlignColumns.gt-lg\", \"\"]],\n  inputs: {\n    gdAlignColumns: \"gdAlignColumns\",\n    \"gdAlignColumns.xs\": \"gdAlignColumns.xs\",\n    \"gdAlignColumns.sm\": \"gdAlignColumns.sm\",\n    \"gdAlignColumns.md\": \"gdAlignColumns.md\",\n    \"gdAlignColumns.lg\": \"gdAlignColumns.lg\",\n    \"gdAlignColumns.xl\": \"gdAlignColumns.xl\",\n    \"gdAlignColumns.lt-sm\": \"gdAlignColumns.lt-sm\",\n    \"gdAlignColumns.lt-md\": \"gdAlignColumns.lt-md\",\n    \"gdAlignColumns.lt-lg\": \"gdAlignColumns.lt-lg\",\n    \"gdAlignColumns.lt-xl\": \"gdAlignColumns.lt-xl\",\n    \"gdAlignColumns.gt-xs\": \"gdAlignColumns.gt-xs\",\n    \"gdAlignColumns.gt-sm\": \"gdAlignColumns.gt-sm\",\n    \"gdAlignColumns.gt-md\": \"gdAlignColumns.gt-md\",\n    \"gdAlignColumns.gt-lg\": \"gdAlignColumns.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAlignColumnsDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$9,\n      inputs: inputs$9\n    }]\n  }], null, null);\n})();\n\nfunction buildCss$1(align, inline) {\n  const css = {},\n        [mainAxis, crossAxis] = align.split(' '); // Main axis\n\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n\n    default:\n      css['align-content'] = DEFAULT_MAIN$1; // default main axis\n\n      break;\n  } // Cross-axis\n\n\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n\n    default:\n      // 'stretch'\n      css['align-items'] = DEFAULT_CROSS$1; // default cross axis\n\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n  return css;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nclass GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n\n}\n\nGridAlignRowsStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵGridAlignRowsStyleBuilder_BaseFactory;\n  return function GridAlignRowsStyleBuilder_Factory(t) {\n    return (ɵGridAlignRowsStyleBuilder_BaseFactory || (ɵGridAlignRowsStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridAlignRowsStyleBuilder)))(t || GridAlignRowsStyleBuilder);\n  };\n}();\n\nGridAlignRowsStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridAlignRowsStyleBuilder,\n  factory: GridAlignRowsStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignRowsStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridAlignRowsDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-align-rows';\n    this._inline = false;\n    this.init();\n  }\n\n  get inline() {\n    return this._inline;\n  }\n\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  } // *********************************************\n  // Protected methods\n  // *********************************************\n\n\n  updateWithValue(value) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n\n}\n\nGridAlignRowsDirective.ɵfac = function GridAlignRowsDirective_Factory(t) {\n  return new (t || GridAlignRowsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridAlignRowsStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridAlignRowsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridAlignRowsDirective,\n  inputs: {\n    inline: [\"gdInline\", \"inline\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAlignRowsDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GridAlignRowsStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\n\nconst alignRowsCache = new Map();\nconst alignRowsInlineCache = new Map();\nconst inputs$8 = ['gdAlignRows', 'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md', 'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm', 'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl', 'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md', 'gdAlignRows.gt-lg'];\nconst selector$8 = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n\nclass DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$8;\n  }\n\n}\n\nDefaultGridAlignRowsDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridAlignRowsDirective_BaseFactory;\n  return function DefaultGridAlignRowsDirective_Factory(t) {\n    return (ɵDefaultGridAlignRowsDirective_BaseFactory || (ɵDefaultGridAlignRowsDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAlignRowsDirective)))(t || DefaultGridAlignRowsDirective);\n  };\n}();\n\nDefaultGridAlignRowsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridAlignRowsDirective,\n  selectors: [[\"\", \"gdAlignRows\", \"\"], [\"\", \"gdAlignRows.xs\", \"\"], [\"\", \"gdAlignRows.sm\", \"\"], [\"\", \"gdAlignRows.md\", \"\"], [\"\", \"gdAlignRows.lg\", \"\"], [\"\", \"gdAlignRows.xl\", \"\"], [\"\", \"gdAlignRows.lt-sm\", \"\"], [\"\", \"gdAlignRows.lt-md\", \"\"], [\"\", \"gdAlignRows.lt-lg\", \"\"], [\"\", \"gdAlignRows.lt-xl\", \"\"], [\"\", \"gdAlignRows.gt-xs\", \"\"], [\"\", \"gdAlignRows.gt-sm\", \"\"], [\"\", \"gdAlignRows.gt-md\", \"\"], [\"\", \"gdAlignRows.gt-lg\", \"\"]],\n  inputs: {\n    gdAlignRows: \"gdAlignRows\",\n    \"gdAlignRows.xs\": \"gdAlignRows.xs\",\n    \"gdAlignRows.sm\": \"gdAlignRows.sm\",\n    \"gdAlignRows.md\": \"gdAlignRows.md\",\n    \"gdAlignRows.lg\": \"gdAlignRows.lg\",\n    \"gdAlignRows.xl\": \"gdAlignRows.xl\",\n    \"gdAlignRows.lt-sm\": \"gdAlignRows.lt-sm\",\n    \"gdAlignRows.lt-md\": \"gdAlignRows.lt-md\",\n    \"gdAlignRows.lt-lg\": \"gdAlignRows.lt-lg\",\n    \"gdAlignRows.lt-xl\": \"gdAlignRows.lt-xl\",\n    \"gdAlignRows.gt-xs\": \"gdAlignRows.gt-xs\",\n    \"gdAlignRows.gt-sm\": \"gdAlignRows.gt-sm\",\n    \"gdAlignRows.gt-md\": \"gdAlignRows.gt-md\",\n    \"gdAlignRows.gt-lg\": \"gdAlignRows.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAlignRowsDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$8,\n      inputs: inputs$8\n    }]\n  }], null, null);\n})();\n\nfunction buildCss(align, inline) {\n  const css = {},\n        [mainAxis, crossAxis] = align.split(' '); // Main axis\n\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n\n    default:\n      css['justify-content'] = DEFAULT_MAIN; // default main axis\n\n      break;\n  } // Cross-axis\n\n\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n\n    default:\n      // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS; // default cross axis\n\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n  return css;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DEFAULT_VALUE$7 = 'auto';\n\nclass GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input) {\n    return {\n      'grid-area': input || DEFAULT_VALUE$7\n    };\n  }\n\n}\n\nGridAreaStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵGridAreaStyleBuilder_BaseFactory;\n  return function GridAreaStyleBuilder_Factory(t) {\n    return (ɵGridAreaStyleBuilder_BaseFactory || (ɵGridAreaStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridAreaStyleBuilder)))(t || GridAreaStyleBuilder);\n  };\n}();\n\nGridAreaStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridAreaStyleBuilder,\n  factory: GridAreaStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAreaStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridAreaDirective extends BaseDirective2 {\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.DIRECTIVE_KEY = 'grid-area';\n    this.styleCache = gridAreaCache;\n    this.init();\n  }\n\n}\n\nGridAreaDirective.ɵfac = function GridAreaDirective_Factory(t) {\n  return new (t || GridAreaDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(GridAreaStyleBuilder), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridAreaDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridAreaDirective,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAreaDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: GridAreaStyleBuilder\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, null);\n})();\n\nconst gridAreaCache = new Map();\nconst inputs$7 = ['gdArea', 'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl', 'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl', 'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'];\nconst selector$7 = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n\nclass DefaultGridAreaDirective extends GridAreaDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$7;\n  }\n\n}\n\nDefaultGridAreaDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridAreaDirective_BaseFactory;\n  return function DefaultGridAreaDirective_Factory(t) {\n    return (ɵDefaultGridAreaDirective_BaseFactory || (ɵDefaultGridAreaDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAreaDirective)))(t || DefaultGridAreaDirective);\n  };\n}();\n\nDefaultGridAreaDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridAreaDirective,\n  selectors: [[\"\", \"gdArea\", \"\"], [\"\", \"gdArea.xs\", \"\"], [\"\", \"gdArea.sm\", \"\"], [\"\", \"gdArea.md\", \"\"], [\"\", \"gdArea.lg\", \"\"], [\"\", \"gdArea.xl\", \"\"], [\"\", \"gdArea.lt-sm\", \"\"], [\"\", \"gdArea.lt-md\", \"\"], [\"\", \"gdArea.lt-lg\", \"\"], [\"\", \"gdArea.lt-xl\", \"\"], [\"\", \"gdArea.gt-xs\", \"\"], [\"\", \"gdArea.gt-sm\", \"\"], [\"\", \"gdArea.gt-md\", \"\"], [\"\", \"gdArea.gt-lg\", \"\"]],\n  inputs: {\n    gdArea: \"gdArea\",\n    \"gdArea.xs\": \"gdArea.xs\",\n    \"gdArea.sm\": \"gdArea.sm\",\n    \"gdArea.md\": \"gdArea.md\",\n    \"gdArea.lg\": \"gdArea.lg\",\n    \"gdArea.xl\": \"gdArea.xl\",\n    \"gdArea.lt-sm\": \"gdArea.lt-sm\",\n    \"gdArea.lt-md\": \"gdArea.lt-md\",\n    \"gdArea.lt-lg\": \"gdArea.lt-lg\",\n    \"gdArea.lt-xl\": \"gdArea.lt-xl\",\n    \"gdArea.gt-xs\": \"gdArea.gt-xs\",\n    \"gdArea.gt-sm\": \"gdArea.gt-sm\",\n    \"gdArea.gt-md\": \"gdArea.gt-md\",\n    \"gdArea.gt-lg\": \"gdArea.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAreaDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$7,\n      inputs: inputs$7\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DEFAULT_VALUE$6 = 'none';\nconst DELIMETER = '|';\n\nclass GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input, parent) {\n    const areas = (input || DEFAULT_VALUE$6).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n\n}\n\nGridAreasStyleBuiler.ɵfac = /* @__PURE__ */function () {\n  let ɵGridAreasStyleBuiler_BaseFactory;\n  return function GridAreasStyleBuiler_Factory(t) {\n    return (ɵGridAreasStyleBuiler_BaseFactory || (ɵGridAreasStyleBuiler_BaseFactory = i0.ɵɵgetInheritedFactory(GridAreasStyleBuiler)))(t || GridAreasStyleBuiler);\n  };\n}();\n\nGridAreasStyleBuiler.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridAreasStyleBuiler,\n  factory: GridAreasStyleBuiler.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAreasStyleBuiler, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridAreasDirective extends BaseDirective2 {\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.DIRECTIVE_KEY = 'grid-areas';\n    this._inline = false;\n    this.init();\n  }\n\n  get inline() {\n    return this._inline;\n  }\n\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  } // *********************************************\n  // Protected methods\n  // *********************************************\n\n\n  updateWithValue(value) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n\n}\n\nGridAreasDirective.ɵfac = function GridAreasDirective_Factory(t) {\n  return new (t || GridAreasDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(GridAreasStyleBuiler), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridAreasDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridAreasDirective,\n  inputs: {\n    inline: [\"gdInline\", \"inline\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAreasDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: GridAreasStyleBuiler\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\n\nconst areasCache = new Map();\nconst areasInlineCache = new Map();\nconst inputs$6 = ['gdAreas', 'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl', 'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl', 'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'];\nconst selector$6 = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n\nclass DefaultGridAreasDirective extends GridAreasDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$6;\n  }\n\n}\n\nDefaultGridAreasDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridAreasDirective_BaseFactory;\n  return function DefaultGridAreasDirective_Factory(t) {\n    return (ɵDefaultGridAreasDirective_BaseFactory || (ɵDefaultGridAreasDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAreasDirective)))(t || DefaultGridAreasDirective);\n  };\n}();\n\nDefaultGridAreasDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridAreasDirective,\n  selectors: [[\"\", \"gdAreas\", \"\"], [\"\", \"gdAreas.xs\", \"\"], [\"\", \"gdAreas.sm\", \"\"], [\"\", \"gdAreas.md\", \"\"], [\"\", \"gdAreas.lg\", \"\"], [\"\", \"gdAreas.xl\", \"\"], [\"\", \"gdAreas.lt-sm\", \"\"], [\"\", \"gdAreas.lt-md\", \"\"], [\"\", \"gdAreas.lt-lg\", \"\"], [\"\", \"gdAreas.lt-xl\", \"\"], [\"\", \"gdAreas.gt-xs\", \"\"], [\"\", \"gdAreas.gt-sm\", \"\"], [\"\", \"gdAreas.gt-md\", \"\"], [\"\", \"gdAreas.gt-lg\", \"\"]],\n  inputs: {\n    gdAreas: \"gdAreas\",\n    \"gdAreas.xs\": \"gdAreas.xs\",\n    \"gdAreas.sm\": \"gdAreas.sm\",\n    \"gdAreas.md\": \"gdAreas.md\",\n    \"gdAreas.lg\": \"gdAreas.lg\",\n    \"gdAreas.xl\": \"gdAreas.xl\",\n    \"gdAreas.lt-sm\": \"gdAreas.lt-sm\",\n    \"gdAreas.lt-md\": \"gdAreas.lt-md\",\n    \"gdAreas.lt-lg\": \"gdAreas.lt-lg\",\n    \"gdAreas.lt-xl\": \"gdAreas.lt-xl\",\n    \"gdAreas.gt-xs\": \"gdAreas.gt-xs\",\n    \"gdAreas.gt-sm\": \"gdAreas.gt-sm\",\n    \"gdAreas.gt-md\": \"gdAreas.gt-md\",\n    \"gdAreas.gt-lg\": \"gdAreas.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAreasDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$6,\n      inputs: inputs$6\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DEFAULT_VALUE$5 = 'initial';\n\nclass GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    let [direction, dense] = (input || DEFAULT_VALUE$5).split(' ');\n\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = dense === 'dense' && direction !== 'dense' ? ' dense' : '';\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n\n}\n\nGridAutoStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵGridAutoStyleBuilder_BaseFactory;\n  return function GridAutoStyleBuilder_Factory(t) {\n    return (ɵGridAutoStyleBuilder_BaseFactory || (ɵGridAutoStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridAutoStyleBuilder)))(t || GridAutoStyleBuilder);\n  };\n}();\n\nGridAutoStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridAutoStyleBuilder,\n  factory: GridAutoStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAutoStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridAutoDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this._inline = false;\n    this.DIRECTIVE_KEY = 'grid-auto';\n    this.init();\n  }\n\n  get inline() {\n    return this._inline;\n  }\n\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  } // *********************************************\n  // Protected methods\n  // *********************************************\n\n\n  updateWithValue(value) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n\n}\n\nGridAutoDirective.ɵfac = function GridAutoDirective_Factory(t) {\n  return new (t || GridAutoDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridAutoStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridAutoDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridAutoDirective,\n  inputs: {\n    inline: [\"gdInline\", \"inline\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridAutoDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GridAutoStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\n\nconst autoCache = new Map();\nconst autoInlineCache = new Map();\nconst inputs$5 = ['gdAuto', 'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl', 'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl', 'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'];\nconst selector$5 = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n\nclass DefaultGridAutoDirective extends GridAutoDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$5;\n  }\n\n}\n\nDefaultGridAutoDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridAutoDirective_BaseFactory;\n  return function DefaultGridAutoDirective_Factory(t) {\n    return (ɵDefaultGridAutoDirective_BaseFactory || (ɵDefaultGridAutoDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridAutoDirective)))(t || DefaultGridAutoDirective);\n  };\n}();\n\nDefaultGridAutoDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridAutoDirective,\n  selectors: [[\"\", \"gdAuto\", \"\"], [\"\", \"gdAuto.xs\", \"\"], [\"\", \"gdAuto.sm\", \"\"], [\"\", \"gdAuto.md\", \"\"], [\"\", \"gdAuto.lg\", \"\"], [\"\", \"gdAuto.xl\", \"\"], [\"\", \"gdAuto.lt-sm\", \"\"], [\"\", \"gdAuto.lt-md\", \"\"], [\"\", \"gdAuto.lt-lg\", \"\"], [\"\", \"gdAuto.lt-xl\", \"\"], [\"\", \"gdAuto.gt-xs\", \"\"], [\"\", \"gdAuto.gt-sm\", \"\"], [\"\", \"gdAuto.gt-md\", \"\"], [\"\", \"gdAuto.gt-lg\", \"\"]],\n  inputs: {\n    gdAuto: \"gdAuto\",\n    \"gdAuto.xs\": \"gdAuto.xs\",\n    \"gdAuto.sm\": \"gdAuto.sm\",\n    \"gdAuto.md\": \"gdAuto.md\",\n    \"gdAuto.lg\": \"gdAuto.lg\",\n    \"gdAuto.xl\": \"gdAuto.xl\",\n    \"gdAuto.lt-sm\": \"gdAuto.lt-sm\",\n    \"gdAuto.lt-md\": \"gdAuto.lt-md\",\n    \"gdAuto.lt-lg\": \"gdAuto.lt-lg\",\n    \"gdAuto.lt-xl\": \"gdAuto.lt-xl\",\n    \"gdAuto.gt-xs\": \"gdAuto.gt-xs\",\n    \"gdAuto.gt-sm\": \"gdAuto.gt-sm\",\n    \"gdAuto.gt-md\": \"gdAuto.gt-md\",\n    \"gdAuto.gt-lg\": \"gdAuto.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridAutoDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$5,\n      inputs: inputs$5\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DEFAULT_VALUE$4 = 'auto';\n\nclass GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input) {\n    return {\n      'grid-column': input || DEFAULT_VALUE$4\n    };\n  }\n\n}\n\nGridColumnStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵGridColumnStyleBuilder_BaseFactory;\n  return function GridColumnStyleBuilder_Factory(t) {\n    return (ɵGridColumnStyleBuilder_BaseFactory || (ɵGridColumnStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridColumnStyleBuilder)))(t || GridColumnStyleBuilder);\n  };\n}();\n\nGridColumnStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridColumnStyleBuilder,\n  factory: GridColumnStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridColumnStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridColumnDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-column';\n    this.styleCache = columnCache;\n    this.init();\n  }\n\n}\n\nGridColumnDirective.ɵfac = function GridColumnDirective_Factory(t) {\n  return new (t || GridColumnDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridColumnStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridColumnDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridColumnDirective,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridColumnDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GridColumnStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, null);\n})();\n\nconst columnCache = new Map();\nconst inputs$4 = ['gdColumn', 'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl', 'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl', 'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'];\nconst selector$4 = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n\nclass DefaultGridColumnDirective extends GridColumnDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$4;\n  }\n\n}\n\nDefaultGridColumnDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridColumnDirective_BaseFactory;\n  return function DefaultGridColumnDirective_Factory(t) {\n    return (ɵDefaultGridColumnDirective_BaseFactory || (ɵDefaultGridColumnDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridColumnDirective)))(t || DefaultGridColumnDirective);\n  };\n}();\n\nDefaultGridColumnDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridColumnDirective,\n  selectors: [[\"\", \"gdColumn\", \"\"], [\"\", \"gdColumn.xs\", \"\"], [\"\", \"gdColumn.sm\", \"\"], [\"\", \"gdColumn.md\", \"\"], [\"\", \"gdColumn.lg\", \"\"], [\"\", \"gdColumn.xl\", \"\"], [\"\", \"gdColumn.lt-sm\", \"\"], [\"\", \"gdColumn.lt-md\", \"\"], [\"\", \"gdColumn.lt-lg\", \"\"], [\"\", \"gdColumn.lt-xl\", \"\"], [\"\", \"gdColumn.gt-xs\", \"\"], [\"\", \"gdColumn.gt-sm\", \"\"], [\"\", \"gdColumn.gt-md\", \"\"], [\"\", \"gdColumn.gt-lg\", \"\"]],\n  inputs: {\n    gdColumn: \"gdColumn\",\n    \"gdColumn.xs\": \"gdColumn.xs\",\n    \"gdColumn.sm\": \"gdColumn.sm\",\n    \"gdColumn.md\": \"gdColumn.md\",\n    \"gdColumn.lg\": \"gdColumn.lg\",\n    \"gdColumn.xl\": \"gdColumn.xl\",\n    \"gdColumn.lt-sm\": \"gdColumn.lt-sm\",\n    \"gdColumn.lt-md\": \"gdColumn.lt-md\",\n    \"gdColumn.lt-lg\": \"gdColumn.lt-lg\",\n    \"gdColumn.lt-xl\": \"gdColumn.lt-xl\",\n    \"gdColumn.gt-xs\": \"gdColumn.gt-xs\",\n    \"gdColumn.gt-sm\": \"gdColumn.gt-sm\",\n    \"gdColumn.gt-md\": \"gdColumn.gt-md\",\n    \"gdColumn.gt-lg\": \"gdColumn.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridColumnDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$4,\n      inputs: inputs$4\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DEFAULT_VALUE$3 = 'none';\nconst AUTO_SPECIFIER$1 = '!';\n\nclass GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    input = input || DEFAULT_VALUE$3;\n    let auto = false;\n\n    if (input.endsWith(AUTO_SPECIFIER$1)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER$1));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': ''\n    };\n    const key = auto ? 'grid-auto-columns' : 'grid-template-columns';\n    css[key] = input;\n    return css;\n  }\n\n}\n\nGridColumnsStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵGridColumnsStyleBuilder_BaseFactory;\n  return function GridColumnsStyleBuilder_Factory(t) {\n    return (ɵGridColumnsStyleBuilder_BaseFactory || (ɵGridColumnsStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridColumnsStyleBuilder)))(t || GridColumnsStyleBuilder);\n  };\n}();\n\nGridColumnsStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridColumnsStyleBuilder,\n  factory: GridColumnsStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridColumnsStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridColumnsDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-columns';\n    this._inline = false;\n    this.init();\n  }\n\n  get inline() {\n    return this._inline;\n  }\n\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  } // *********************************************\n  // Protected methods\n  // *********************************************\n\n\n  updateWithValue(value) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n\n}\n\nGridColumnsDirective.ɵfac = function GridColumnsDirective_Factory(t) {\n  return new (t || GridColumnsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridColumnsStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridColumnsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridColumnsDirective,\n  inputs: {\n    inline: [\"gdInline\", \"inline\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridColumnsDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GridColumnsStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\n\nconst columnsCache = new Map();\nconst columnsInlineCache = new Map();\nconst inputs$3 = ['gdColumns', 'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl', 'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl', 'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'];\nconst selector$3 = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n\nclass DefaultGridColumnsDirective extends GridColumnsDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$3;\n  }\n\n}\n\nDefaultGridColumnsDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridColumnsDirective_BaseFactory;\n  return function DefaultGridColumnsDirective_Factory(t) {\n    return (ɵDefaultGridColumnsDirective_BaseFactory || (ɵDefaultGridColumnsDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridColumnsDirective)))(t || DefaultGridColumnsDirective);\n  };\n}();\n\nDefaultGridColumnsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridColumnsDirective,\n  selectors: [[\"\", \"gdColumns\", \"\"], [\"\", \"gdColumns.xs\", \"\"], [\"\", \"gdColumns.sm\", \"\"], [\"\", \"gdColumns.md\", \"\"], [\"\", \"gdColumns.lg\", \"\"], [\"\", \"gdColumns.xl\", \"\"], [\"\", \"gdColumns.lt-sm\", \"\"], [\"\", \"gdColumns.lt-md\", \"\"], [\"\", \"gdColumns.lt-lg\", \"\"], [\"\", \"gdColumns.lt-xl\", \"\"], [\"\", \"gdColumns.gt-xs\", \"\"], [\"\", \"gdColumns.gt-sm\", \"\"], [\"\", \"gdColumns.gt-md\", \"\"], [\"\", \"gdColumns.gt-lg\", \"\"]],\n  inputs: {\n    gdColumns: \"gdColumns\",\n    \"gdColumns.xs\": \"gdColumns.xs\",\n    \"gdColumns.sm\": \"gdColumns.sm\",\n    \"gdColumns.md\": \"gdColumns.md\",\n    \"gdColumns.lg\": \"gdColumns.lg\",\n    \"gdColumns.xl\": \"gdColumns.xl\",\n    \"gdColumns.lt-sm\": \"gdColumns.lt-sm\",\n    \"gdColumns.lt-md\": \"gdColumns.lt-md\",\n    \"gdColumns.lt-lg\": \"gdColumns.lt-lg\",\n    \"gdColumns.lt-xl\": \"gdColumns.lt-xl\",\n    \"gdColumns.gt-xs\": \"gdColumns.gt-xs\",\n    \"gdColumns.gt-sm\": \"gdColumns.gt-sm\",\n    \"gdColumns.gt-md\": \"gdColumns.gt-md\",\n    \"gdColumns.gt-lg\": \"gdColumns.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridColumnsDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$3,\n      inputs: inputs$3\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DEFAULT_VALUE$2 = '0';\n\nclass GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE$2\n    };\n  }\n\n}\n\nGridGapStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵGridGapStyleBuilder_BaseFactory;\n  return function GridGapStyleBuilder_Factory(t) {\n    return (ɵGridGapStyleBuilder_BaseFactory || (ɵGridGapStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridGapStyleBuilder)))(t || GridGapStyleBuilder);\n  };\n}();\n\nGridGapStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridGapStyleBuilder,\n  factory: GridGapStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridGapStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridGapDirective extends BaseDirective2 {\n  constructor(elRef, styleUtils, styleBuilder, marshal) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.DIRECTIVE_KEY = 'grid-gap';\n    this._inline = false;\n    this.init();\n  }\n\n  get inline() {\n    return this._inline;\n  }\n\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  } // *********************************************\n  // Protected methods\n  // *********************************************\n\n\n  updateWithValue(value) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n\n}\n\nGridGapDirective.ɵfac = function GridGapDirective_Factory(t) {\n  return new (t || GridGapDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(GridGapStyleBuilder), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridGapDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridGapDirective,\n  inputs: {\n    inline: [\"gdInline\", \"inline\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridGapDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: GridGapStyleBuilder\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\n\nconst gapCache = new Map();\nconst gapInlineCache = new Map();\nconst inputs$2 = ['gdGap', 'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl', 'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl', 'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'];\nconst selector$2 = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n\nclass DefaultGridGapDirective extends GridGapDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$2;\n  }\n\n}\n\nDefaultGridGapDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridGapDirective_BaseFactory;\n  return function DefaultGridGapDirective_Factory(t) {\n    return (ɵDefaultGridGapDirective_BaseFactory || (ɵDefaultGridGapDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridGapDirective)))(t || DefaultGridGapDirective);\n  };\n}();\n\nDefaultGridGapDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridGapDirective,\n  selectors: [[\"\", \"gdGap\", \"\"], [\"\", \"gdGap.xs\", \"\"], [\"\", \"gdGap.sm\", \"\"], [\"\", \"gdGap.md\", \"\"], [\"\", \"gdGap.lg\", \"\"], [\"\", \"gdGap.xl\", \"\"], [\"\", \"gdGap.lt-sm\", \"\"], [\"\", \"gdGap.lt-md\", \"\"], [\"\", \"gdGap.lt-lg\", \"\"], [\"\", \"gdGap.lt-xl\", \"\"], [\"\", \"gdGap.gt-xs\", \"\"], [\"\", \"gdGap.gt-sm\", \"\"], [\"\", \"gdGap.gt-md\", \"\"], [\"\", \"gdGap.gt-lg\", \"\"]],\n  inputs: {\n    gdGap: \"gdGap\",\n    \"gdGap.xs\": \"gdGap.xs\",\n    \"gdGap.sm\": \"gdGap.sm\",\n    \"gdGap.md\": \"gdGap.md\",\n    \"gdGap.lg\": \"gdGap.lg\",\n    \"gdGap.xl\": \"gdGap.xl\",\n    \"gdGap.lt-sm\": \"gdGap.lt-sm\",\n    \"gdGap.lt-md\": \"gdGap.lt-md\",\n    \"gdGap.lt-lg\": \"gdGap.lt-lg\",\n    \"gdGap.lt-xl\": \"gdGap.lt-xl\",\n    \"gdGap.gt-xs\": \"gdGap.gt-xs\",\n    \"gdGap.gt-sm\": \"gdGap.gt-sm\",\n    \"gdGap.gt-md\": \"gdGap.gt-md\",\n    \"gdGap.gt-lg\": \"gdGap.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridGapDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$2,\n      inputs: inputs$2\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DEFAULT_VALUE$1 = 'auto';\n\nclass GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input) {\n    return {\n      'grid-row': input || DEFAULT_VALUE$1\n    };\n  }\n\n}\n\nGridRowStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵGridRowStyleBuilder_BaseFactory;\n  return function GridRowStyleBuilder_Factory(t) {\n    return (ɵGridRowStyleBuilder_BaseFactory || (ɵGridRowStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridRowStyleBuilder)))(t || GridRowStyleBuilder);\n  };\n}();\n\nGridRowStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridRowStyleBuilder,\n  factory: GridRowStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridRowStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridRowDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-row';\n    this.styleCache = rowCache;\n    this.init();\n  }\n\n}\n\nGridRowDirective.ɵfac = function GridRowDirective_Factory(t) {\n  return new (t || GridRowDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridRowStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridRowDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridRowDirective,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridRowDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GridRowStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, null);\n})();\n\nconst rowCache = new Map();\nconst inputs$1 = ['gdRow', 'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl', 'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl', 'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'];\nconst selector$1 = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n\nclass DefaultGridRowDirective extends GridRowDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$1;\n  }\n\n}\n\nDefaultGridRowDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridRowDirective_BaseFactory;\n  return function DefaultGridRowDirective_Factory(t) {\n    return (ɵDefaultGridRowDirective_BaseFactory || (ɵDefaultGridRowDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridRowDirective)))(t || DefaultGridRowDirective);\n  };\n}();\n\nDefaultGridRowDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridRowDirective,\n  selectors: [[\"\", \"gdRow\", \"\"], [\"\", \"gdRow.xs\", \"\"], [\"\", \"gdRow.sm\", \"\"], [\"\", \"gdRow.md\", \"\"], [\"\", \"gdRow.lg\", \"\"], [\"\", \"gdRow.xl\", \"\"], [\"\", \"gdRow.lt-sm\", \"\"], [\"\", \"gdRow.lt-md\", \"\"], [\"\", \"gdRow.lt-lg\", \"\"], [\"\", \"gdRow.lt-xl\", \"\"], [\"\", \"gdRow.gt-xs\", \"\"], [\"\", \"gdRow.gt-sm\", \"\"], [\"\", \"gdRow.gt-md\", \"\"], [\"\", \"gdRow.gt-lg\", \"\"]],\n  inputs: {\n    gdRow: \"gdRow\",\n    \"gdRow.xs\": \"gdRow.xs\",\n    \"gdRow.sm\": \"gdRow.sm\",\n    \"gdRow.md\": \"gdRow.md\",\n    \"gdRow.lg\": \"gdRow.lg\",\n    \"gdRow.xl\": \"gdRow.xl\",\n    \"gdRow.lt-sm\": \"gdRow.lt-sm\",\n    \"gdRow.lt-md\": \"gdRow.lt-md\",\n    \"gdRow.lt-lg\": \"gdRow.lt-lg\",\n    \"gdRow.lt-xl\": \"gdRow.lt-xl\",\n    \"gdRow.gt-xs\": \"gdRow.gt-xs\",\n    \"gdRow.gt-sm\": \"gdRow.gt-sm\",\n    \"gdRow.gt-md\": \"gdRow.gt-md\",\n    \"gdRow.gt-lg\": \"gdRow.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridRowDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$1,\n      inputs: inputs$1\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nclass GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input, parent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': ''\n    };\n    const key = auto ? 'grid-auto-rows' : 'grid-template-rows';\n    css[key] = input;\n    return css;\n  }\n\n}\n\nGridRowsStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵGridRowsStyleBuilder_BaseFactory;\n  return function GridRowsStyleBuilder_Factory(t) {\n    return (ɵGridRowsStyleBuilder_BaseFactory || (ɵGridRowsStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(GridRowsStyleBuilder)))(t || GridRowsStyleBuilder);\n  };\n}();\n\nGridRowsStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GridRowsStyleBuilder,\n  factory: GridRowsStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridRowsStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass GridRowsDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.DIRECTIVE_KEY = 'grid-rows';\n    this._inline = false;\n    this.init();\n  }\n\n  get inline() {\n    return this._inline;\n  }\n\n  set inline(val) {\n    this._inline = coerceBooleanProperty(val);\n  } // *********************************************\n  // Protected methods\n  // *********************************************\n\n\n  updateWithValue(value) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {\n      inline: this.inline\n    });\n  }\n\n}\n\nGridRowsDirective.ɵfac = function GridRowsDirective_Factory(t) {\n  return new (t || GridRowsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GridRowsStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller));\n};\n\nGridRowsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GridRowsDirective,\n  inputs: {\n    inline: [\"gdInline\", \"inline\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridRowsDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GridRowsStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }];\n  }, {\n    inline: [{\n      type: Input,\n      args: ['gdInline']\n    }]\n  });\n})();\n\nconst rowsCache = new Map();\nconst rowsInlineCache = new Map();\nconst inputs = ['gdRows', 'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl', 'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl', 'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'];\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n\nclass DefaultGridRowsDirective extends GridRowsDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs;\n  }\n\n}\n\nDefaultGridRowsDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultGridRowsDirective_BaseFactory;\n  return function DefaultGridRowsDirective_Factory(t) {\n    return (ɵDefaultGridRowsDirective_BaseFactory || (ɵDefaultGridRowsDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultGridRowsDirective)))(t || DefaultGridRowsDirective);\n  };\n}();\n\nDefaultGridRowsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultGridRowsDirective,\n  selectors: [[\"\", \"gdRows\", \"\"], [\"\", \"gdRows.xs\", \"\"], [\"\", \"gdRows.sm\", \"\"], [\"\", \"gdRows.md\", \"\"], [\"\", \"gdRows.lg\", \"\"], [\"\", \"gdRows.xl\", \"\"], [\"\", \"gdRows.lt-sm\", \"\"], [\"\", \"gdRows.lt-md\", \"\"], [\"\", \"gdRows.lt-lg\", \"\"], [\"\", \"gdRows.lt-xl\", \"\"], [\"\", \"gdRows.gt-xs\", \"\"], [\"\", \"gdRows.gt-sm\", \"\"], [\"\", \"gdRows.gt-md\", \"\"], [\"\", \"gdRows.gt-lg\", \"\"]],\n  inputs: {\n    gdRows: \"gdRows\",\n    \"gdRows.xs\": \"gdRows.xs\",\n    \"gdRows.sm\": \"gdRows.sm\",\n    \"gdRows.md\": \"gdRows.md\",\n    \"gdRows.lg\": \"gdRows.lg\",\n    \"gdRows.xl\": \"gdRows.xl\",\n    \"gdRows.lt-sm\": \"gdRows.lt-sm\",\n    \"gdRows.lt-md\": \"gdRows.lt-md\",\n    \"gdRows.lt-lg\": \"gdRows.lt-lg\",\n    \"gdRows.lt-xl\": \"gdRows.lt-xl\",\n    \"gdRows.gt-xs\": \"gdRows.gt-xs\",\n    \"gdRows.gt-sm\": \"gdRows.gt-sm\",\n    \"gdRows.gt-md\": \"gdRows.gt-md\",\n    \"gdRows.gt-lg\": \"gdRows.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultGridRowsDirective, [{\n    type: Directive,\n    args: [{\n      selector,\n      inputs\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst ALL_DIRECTIVES = [DefaultGridAlignDirective, DefaultGridAlignColumnsDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective];\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\nclass GridModule {}\n\nGridModule.ɵfac = function GridModule_Factory(t) {\n  return new (t || GridModule)();\n};\n\nGridModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GridModule\n});\nGridModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CoreModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CoreModule],\n      declarations: [...ALL_DIRECTIVES],\n      exports: [...ALL_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DefaultGridAlignColumnsDirective, DefaultGridAlignDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective, GridAlignColumnsDirective, GridAlignColumnsStyleBuilder, GridAlignDirective, GridAlignRowsDirective, GridAlignRowsStyleBuilder, GridAlignStyleBuilder, GridAreaDirective, GridAreaStyleBuilder, GridAreasDirective, GridAreasStyleBuiler, GridAutoDirective, GridAutoStyleBuilder, GridColumnDirective, GridColumnStyleBuilder, GridColumnsDirective, GridColumnsStyleBuilder, GridGapDirective, GridGapStyleBuilder, GridModule, GridRowDirective, GridRowStyleBuilder, GridRowsDirective, GridRowsStyleBuilder };","map":{"version":3,"sources":["D:/RSLang/RSLang/node_modules/@angular/flex-layout/fesm2015/angular-flex-layout-grid.mjs"],"names":["i0","Injectable","Directive","Input","NgModule","i1","StyleBuilder","BaseDirective2","CoreModule","coerceBooleanProperty","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","buildStyles","input","buildCss$2","ɵfac","ɵprov","type","args","providedIn","GridAlignDirective","constructor","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","styleCache","alignCache","init","ElementRef","StyleUtils","MediaMarshaller","ɵdir","Map","inputs$a","selector$a","DefaultGridAlignDirective","arguments","inputs","selector","align","css","rowAxis","columnAxis","split","DEFAULT_MAIN$1","DEFAULT_CROSS$1","GridAlignColumnsStyleBuilder","parent","buildCss$1","inline","GridAlignColumnsDirective","_inline","val","updateWithValue","value","alignColumnsInlineCache","alignColumnsCache","addStyles","inputs$9","selector$9","DefaultGridAlignColumnsDirective","mainAxis","crossAxis","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignRowsStyleBuilder","buildCss","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","inputs$8","selector$8","DefaultGridAlignRowsDirective","DEFAULT_VALUE$7","GridAreaStyleBuilder","GridAreaDirective","elRef","styleUtils","gridAreaCache","inputs$7","selector$7","DefaultGridAreaDirective","DEFAULT_VALUE$6","DELIMETER","GridAreasStyleBuiler","areas","map","v","trim","join","GridAreasDirective","areasInlineCache","areasCache","inputs$6","selector$6","DefaultGridAreasDirective","DEFAULT_VALUE$5","GridAutoStyleBuilder","direction","dense","GridAutoDirective","autoInlineCache","autoCache","inputs$5","selector$5","DefaultGridAutoDirective","DEFAULT_VALUE$4","GridColumnStyleBuilder","GridColumnDirective","columnCache","inputs$4","selector$4","DefaultGridColumnDirective","DEFAULT_VALUE$3","AUTO_SPECIFIER$1","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","key","GridColumnsDirective","columnsInlineCache","columnsCache","inputs$3","selector$3","DefaultGridColumnsDirective","DEFAULT_VALUE$2","GridGapStyleBuilder","GridGapDirective","gapInlineCache","gapCache","inputs$2","selector$2","DefaultGridGapDirective","DEFAULT_VALUE$1","GridRowStyleBuilder","GridRowDirective","rowCache","inputs$1","selector$1","DefaultGridRowDirective","DEFAULT_VALUE","AUTO_SPECIFIER","GridRowsStyleBuilder","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","ALL_DIRECTIVES","GridModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, CoreModule } from '@angular/flex-layout/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\nclass GridAlignStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return buildCss$2(input || ROW_DEFAULT);\n    }\n}\nGridAlignStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAlignStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align';\n        this.styleCache = alignCache;\n        this.init();\n    }\n}\nGridAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAlignDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAlignStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; } });\nconst alignCache = new Map();\nconst inputs$a = [\n    'gdGridAlign',\n    'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n    'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n    'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\nconst selector$a = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\nclass DefaultGridAlignDirective extends GridAlignDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$a;\n    }\n}\nDefaultGridAlignDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAlignDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAlignDirective, selector: \"\\n  [gdGridAlign],\\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\\n\", inputs: { gdGridAlign: \"gdGridAlign\", \"gdGridAlign.xs\": \"gdGridAlign.xs\", \"gdGridAlign.sm\": \"gdGridAlign.sm\", \"gdGridAlign.md\": \"gdGridAlign.md\", \"gdGridAlign.lg\": \"gdGridAlign.lg\", \"gdGridAlign.xl\": \"gdGridAlign.xl\", \"gdGridAlign.lt-sm\": \"gdGridAlign.lt-sm\", \"gdGridAlign.lt-md\": \"gdGridAlign.lt-md\", \"gdGridAlign.lt-lg\": \"gdGridAlign.lt-lg\", \"gdGridAlign.lt-xl\": \"gdGridAlign.lt-xl\", \"gdGridAlign.gt-xs\": \"gdGridAlign.gt-xs\", \"gdGridAlign.gt-sm\": \"gdGridAlign.gt-sm\", \"gdGridAlign.gt-md\": \"gdGridAlign.gt-md\", \"gdGridAlign.gt-lg\": \"gdGridAlign.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$a, inputs: inputs$a }]\n        }] });\nfunction buildCss$2(align = '') {\n    const css = {}, [rowAxis, columnAxis] = align.split(' ');\n    // Row axis\n    switch (rowAxis) {\n        case 'end':\n            css['justify-self'] = 'end';\n            break;\n        case 'center':\n            css['justify-self'] = 'center';\n            break;\n        case 'stretch':\n            css['justify-self'] = 'stretch';\n            break;\n        case 'start':\n            css['justify-self'] = 'start';\n            break;\n        default:\n            css['justify-self'] = ROW_DEFAULT; // default row axis\n            break;\n    }\n    // Column axis\n    switch (columnAxis) {\n        case 'end':\n            css['align-self'] = 'end';\n            break;\n        case 'center':\n            css['align-self'] = 'center';\n            break;\n        case 'stretch':\n            css['align-self'] = 'stretch';\n            break;\n        case 'start':\n            css['align-self'] = 'start';\n            break;\n        default:\n            css['align-self'] = COL_DEFAULT; // default column axis\n            break;\n    }\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_MAIN$1 = 'start';\nconst DEFAULT_CROSS$1 = 'stretch';\nclass GridAlignColumnsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return buildCss$1(input || `${DEFAULT_MAIN$1} ${DEFAULT_CROSS$1}`, parent.inline);\n    }\n}\nGridAlignColumnsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignColumnsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAlignColumnsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignColumnsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignColumnsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignColumnsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align-columns';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAlignColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignColumnsDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignColumnsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAlignColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAlignColumnsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignColumnsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAlignColumnsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst alignColumnsCache = new Map();\nconst alignColumnsInlineCache = new Map();\nconst inputs$9 = [\n    'gdAlignColumns',\n    'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n    'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n    'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n    'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n    'gdAlignColumns.gt-lg'\n];\nconst selector$9 = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\nclass DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$9;\n    }\n}\nDefaultGridAlignColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignColumnsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAlignColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAlignColumnsDirective, selector: \"\\n  [gdAlignColumns],\\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\\n  [gdAlignColumns.gt-lg]\\n\", inputs: { gdAlignColumns: \"gdAlignColumns\", \"gdAlignColumns.xs\": \"gdAlignColumns.xs\", \"gdAlignColumns.sm\": \"gdAlignColumns.sm\", \"gdAlignColumns.md\": \"gdAlignColumns.md\", \"gdAlignColumns.lg\": \"gdAlignColumns.lg\", \"gdAlignColumns.xl\": \"gdAlignColumns.xl\", \"gdAlignColumns.lt-sm\": \"gdAlignColumns.lt-sm\", \"gdAlignColumns.lt-md\": \"gdAlignColumns.lt-md\", \"gdAlignColumns.lt-lg\": \"gdAlignColumns.lt-lg\", \"gdAlignColumns.lt-xl\": \"gdAlignColumns.lt-xl\", \"gdAlignColumns.gt-xs\": \"gdAlignColumns.gt-xs\", \"gdAlignColumns.gt-sm\": \"gdAlignColumns.gt-sm\", \"gdAlignColumns.gt-md\": \"gdAlignColumns.gt-md\", \"gdAlignColumns.gt-lg\": \"gdAlignColumns.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignColumnsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$9, inputs: inputs$9 }]\n        }] });\nfunction buildCss$1(align, inline) {\n    const css = {}, [mainAxis, crossAxis] = align.split(' ');\n    // Main axis\n    switch (mainAxis) {\n        case 'center':\n            css['align-content'] = 'center';\n            break;\n        case 'space-around':\n            css['align-content'] = 'space-around';\n            break;\n        case 'space-between':\n            css['align-content'] = 'space-between';\n            break;\n        case 'space-evenly':\n            css['align-content'] = 'space-evenly';\n            break;\n        case 'end':\n            css['align-content'] = 'end';\n            break;\n        case 'start':\n            css['align-content'] = 'start';\n            break;\n        case 'stretch':\n            css['align-content'] = 'stretch';\n            break;\n        default:\n            css['align-content'] = DEFAULT_MAIN$1; // default main axis\n            break;\n    }\n    // Cross-axis\n    switch (crossAxis) {\n        case 'start':\n            css['align-items'] = 'start';\n            break;\n        case 'center':\n            css['align-items'] = 'center';\n            break;\n        case 'end':\n            css['align-items'] = 'end';\n            break;\n        case 'stretch':\n            css['align-items'] = 'stretch';\n            break;\n        default: // 'stretch'\n            css['align-items'] = DEFAULT_CROSS$1; // default cross axis\n            break;\n    }\n    css['display'] = inline ? 'inline-grid' : 'grid';\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\nclass GridAlignRowsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n    }\n}\nGridAlignRowsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignRowsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAlignRowsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignRowsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignRowsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAlignRowsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-align-rows';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAlignRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignRowsDirective, deps: [{ token: i0.ElementRef }, { token: GridAlignRowsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAlignRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAlignRowsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAlignRowsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAlignRowsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst alignRowsCache = new Map();\nconst alignRowsInlineCache = new Map();\nconst inputs$8 = [\n    'gdAlignRows',\n    'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n    'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n    'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n    'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n    'gdAlignRows.gt-lg'\n];\nconst selector$8 = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\nclass DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$8;\n    }\n}\nDefaultGridAlignRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignRowsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAlignRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAlignRowsDirective, selector: \"\\n  [gdAlignRows],\\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\\n  [gdAlignRows.gt-lg]\\n\", inputs: { gdAlignRows: \"gdAlignRows\", \"gdAlignRows.xs\": \"gdAlignRows.xs\", \"gdAlignRows.sm\": \"gdAlignRows.sm\", \"gdAlignRows.md\": \"gdAlignRows.md\", \"gdAlignRows.lg\": \"gdAlignRows.lg\", \"gdAlignRows.xl\": \"gdAlignRows.xl\", \"gdAlignRows.lt-sm\": \"gdAlignRows.lt-sm\", \"gdAlignRows.lt-md\": \"gdAlignRows.lt-md\", \"gdAlignRows.lt-lg\": \"gdAlignRows.lt-lg\", \"gdAlignRows.lt-xl\": \"gdAlignRows.lt-xl\", \"gdAlignRows.gt-xs\": \"gdAlignRows.gt-xs\", \"gdAlignRows.gt-sm\": \"gdAlignRows.gt-sm\", \"gdAlignRows.gt-md\": \"gdAlignRows.gt-md\", \"gdAlignRows.gt-lg\": \"gdAlignRows.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAlignRowsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$8, inputs: inputs$8 }]\n        }] });\nfunction buildCss(align, inline) {\n    const css = {}, [mainAxis, crossAxis] = align.split(' ');\n    // Main axis\n    switch (mainAxis) {\n        case 'center':\n        case 'space-around':\n        case 'space-between':\n        case 'space-evenly':\n        case 'end':\n        case 'start':\n        case 'stretch':\n            css['justify-content'] = mainAxis;\n            break;\n        default:\n            css['justify-content'] = DEFAULT_MAIN; // default main axis\n            break;\n    }\n    // Cross-axis\n    switch (crossAxis) {\n        case 'start':\n        case 'center':\n        case 'end':\n        case 'stretch':\n            css['justify-items'] = crossAxis;\n            break;\n        default: // 'stretch'\n            css['justify-items'] = DEFAULT_CROSS; // default cross axis\n            break;\n    }\n    css['display'] = inline ? 'inline-grid' : 'grid';\n    return css;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$7 = 'auto';\nclass GridAreaStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-area': input || DEFAULT_VALUE$7 };\n    }\n}\nGridAreaStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreaStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAreaStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreaStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreaStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAreaDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-area';\n        this.styleCache = gridAreaCache;\n        this.init();\n    }\n}\nGridAreaDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreaDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridAreaStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAreaDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAreaDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreaDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridAreaStyleBuilder }, { type: i1.MediaMarshaller }]; } });\nconst gridAreaCache = new Map();\nconst inputs$7 = [\n    'gdArea',\n    'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n    'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n    'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector$7 = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\nclass DefaultGridAreaDirective extends GridAreaDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$7;\n    }\n}\nDefaultGridAreaDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAreaDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAreaDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAreaDirective, selector: \"\\n  [gdArea],\\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\\n\", inputs: { gdArea: \"gdArea\", \"gdArea.xs\": \"gdArea.xs\", \"gdArea.sm\": \"gdArea.sm\", \"gdArea.md\": \"gdArea.md\", \"gdArea.lg\": \"gdArea.lg\", \"gdArea.xl\": \"gdArea.xl\", \"gdArea.lt-sm\": \"gdArea.lt-sm\", \"gdArea.lt-md\": \"gdArea.lt-md\", \"gdArea.lt-lg\": \"gdArea.lt-lg\", \"gdArea.lt-xl\": \"gdArea.lt-xl\", \"gdArea.gt-xs\": \"gdArea.gt-xs\", \"gdArea.gt-sm\": \"gdArea.gt-sm\", \"gdArea.gt-md\": \"gdArea.gt-md\", \"gdArea.gt-lg\": \"gdArea.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAreaDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$7, inputs: inputs$7 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$6 = 'none';\nconst DELIMETER = '|';\nclass GridAreasStyleBuiler extends StyleBuilder {\n    buildStyles(input, parent) {\n        const areas = (input || DEFAULT_VALUE$6).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-template-areas': areas.join(' ')\n        };\n    }\n}\nGridAreasStyleBuiler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreasStyleBuiler, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAreasStyleBuiler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreasStyleBuiler, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreasStyleBuiler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAreasDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-areas';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? areasInlineCache : areasCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAreasDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreasDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridAreasStyleBuiler }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAreasDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAreasDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAreasDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridAreasStyleBuiler }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst areasCache = new Map();\nconst areasInlineCache = new Map();\nconst inputs$6 = [\n    'gdAreas',\n    'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n    'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n    'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\nconst selector$6 = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\nclass DefaultGridAreasDirective extends GridAreasDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$6;\n    }\n}\nDefaultGridAreasDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAreasDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAreasDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAreasDirective, selector: \"\\n  [gdAreas],\\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\\n\", inputs: { gdAreas: \"gdAreas\", \"gdAreas.xs\": \"gdAreas.xs\", \"gdAreas.sm\": \"gdAreas.sm\", \"gdAreas.md\": \"gdAreas.md\", \"gdAreas.lg\": \"gdAreas.lg\", \"gdAreas.xl\": \"gdAreas.xl\", \"gdAreas.lt-sm\": \"gdAreas.lt-sm\", \"gdAreas.lt-md\": \"gdAreas.lt-md\", \"gdAreas.lt-lg\": \"gdAreas.lt-lg\", \"gdAreas.lt-xl\": \"gdAreas.lt-xl\", \"gdAreas.gt-xs\": \"gdAreas.gt-xs\", \"gdAreas.gt-sm\": \"gdAreas.gt-sm\", \"gdAreas.gt-md\": \"gdAreas.gt-md\", \"gdAreas.gt-lg\": \"gdAreas.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAreasDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$6, inputs: inputs$6 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$5 = 'initial';\nclass GridAutoStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        let [direction, dense] = (input || DEFAULT_VALUE$5).split(' ');\n        if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n            direction = 'row';\n        }\n        dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-flow': direction + dense\n        };\n    }\n}\nGridAutoStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAutoStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridAutoStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAutoStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAutoStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridAutoDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this._inline = false;\n        this.DIRECTIVE_KEY = 'grid-auto';\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? autoInlineCache : autoCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridAutoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAutoDirective, deps: [{ token: i0.ElementRef }, { token: GridAutoStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridAutoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridAutoDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridAutoDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridAutoStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst autoCache = new Map();\nconst autoInlineCache = new Map();\nconst inputs$5 = [\n    'gdAuto',\n    'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n    'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n    'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector$5 = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\nclass DefaultGridAutoDirective extends GridAutoDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$5;\n    }\n}\nDefaultGridAutoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAutoDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridAutoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridAutoDirective, selector: \"\\n  [gdAuto],\\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\\n\", inputs: { gdAuto: \"gdAuto\", \"gdAuto.xs\": \"gdAuto.xs\", \"gdAuto.sm\": \"gdAuto.sm\", \"gdAuto.md\": \"gdAuto.md\", \"gdAuto.lg\": \"gdAuto.lg\", \"gdAuto.xl\": \"gdAuto.xl\", \"gdAuto.lt-sm\": \"gdAuto.lt-sm\", \"gdAuto.lt-md\": \"gdAuto.lt-md\", \"gdAuto.lt-lg\": \"gdAuto.lt-lg\", \"gdAuto.lt-xl\": \"gdAuto.lt-xl\", \"gdAuto.gt-xs\": \"gdAuto.gt-xs\", \"gdAuto.gt-sm\": \"gdAuto.gt-sm\", \"gdAuto.gt-md\": \"gdAuto.gt-md\", \"gdAuto.gt-lg\": \"gdAuto.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridAutoDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$5, inputs: inputs$5 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$4 = 'auto';\nclass GridColumnStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-column': input || DEFAULT_VALUE$4 };\n    }\n}\nGridColumnStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridColumnStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridColumnDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-column';\n        this.styleCache = columnCache;\n        this.init();\n    }\n}\nGridColumnDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnDirective, deps: [{ token: i0.ElementRef }, { token: GridColumnStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridColumnDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridColumnDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridColumnStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; } });\nconst columnCache = new Map();\nconst inputs$4 = [\n    'gdColumn',\n    'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n    'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n    'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\nconst selector$4 = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nclass DefaultGridColumnDirective extends GridColumnDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$4;\n    }\n}\nDefaultGridColumnDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridColumnDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridColumnDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridColumnDirective, selector: \"\\n  [gdColumn],\\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\\n\", inputs: { gdColumn: \"gdColumn\", \"gdColumn.xs\": \"gdColumn.xs\", \"gdColumn.sm\": \"gdColumn.sm\", \"gdColumn.md\": \"gdColumn.md\", \"gdColumn.lg\": \"gdColumn.lg\", \"gdColumn.xl\": \"gdColumn.xl\", \"gdColumn.lt-sm\": \"gdColumn.lt-sm\", \"gdColumn.lt-md\": \"gdColumn.lt-md\", \"gdColumn.lt-lg\": \"gdColumn.lt-lg\", \"gdColumn.lt-xl\": \"gdColumn.lt-xl\", \"gdColumn.gt-xs\": \"gdColumn.gt-xs\", \"gdColumn.gt-sm\": \"gdColumn.gt-sm\", \"gdColumn.gt-md\": \"gdColumn.gt-md\", \"gdColumn.gt-lg\": \"gdColumn.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridColumnDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$4, inputs: inputs$4 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$3 = 'none';\nconst AUTO_SPECIFIER$1 = '!';\nclass GridColumnsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        input = input || DEFAULT_VALUE$3;\n        let auto = false;\n        if (input.endsWith(AUTO_SPECIFIER$1)) {\n            input = input.substring(0, input.indexOf(AUTO_SPECIFIER$1));\n            auto = true;\n        }\n        const css = {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-columns': '',\n            'grid-template-columns': '',\n        };\n        const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n        css[key] = input;\n        return css;\n    }\n}\nGridColumnsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridColumnsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridColumnsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-columns';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnsDirective, deps: [{ token: i0.ElementRef }, { token: GridColumnsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridColumnsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridColumnsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridColumnsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst columnsCache = new Map();\nconst columnsInlineCache = new Map();\nconst inputs$3 = [\n    'gdColumns',\n    'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n    'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n    'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\nconst selector$3 = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nclass DefaultGridColumnsDirective extends GridColumnsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultGridColumnsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridColumnsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridColumnsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridColumnsDirective, selector: \"\\n  [gdColumns],\\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\\n\", inputs: { gdColumns: \"gdColumns\", \"gdColumns.xs\": \"gdColumns.xs\", \"gdColumns.sm\": \"gdColumns.sm\", \"gdColumns.md\": \"gdColumns.md\", \"gdColumns.lg\": \"gdColumns.lg\", \"gdColumns.xl\": \"gdColumns.xl\", \"gdColumns.lt-sm\": \"gdColumns.lt-sm\", \"gdColumns.lt-md\": \"gdColumns.lt-md\", \"gdColumns.lt-lg\": \"gdColumns.lt-lg\", \"gdColumns.lt-xl\": \"gdColumns.lt-xl\", \"gdColumns.gt-xs\": \"gdColumns.gt-xs\", \"gdColumns.gt-sm\": \"gdColumns.gt-sm\", \"gdColumns.gt-md\": \"gdColumns.gt-md\", \"gdColumns.gt-lg\": \"gdColumns.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridColumnsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$2 = '0';\nclass GridGapStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        return {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-gap': input || DEFAULT_VALUE$2\n        };\n    }\n}\nGridGapStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridGapStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridGapStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridGapStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridGapStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridGapDirective extends BaseDirective2 {\n    constructor(elRef, styleUtils, styleBuilder, marshal) {\n        super(elRef, styleBuilder, styleUtils, marshal);\n        this.DIRECTIVE_KEY = 'grid-gap';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? gapInlineCache : gapCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridGapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridGapDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: GridGapStyleBuilder }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridGapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridGapDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridGapDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: GridGapStyleBuilder }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst gapCache = new Map();\nconst gapInlineCache = new Map();\nconst inputs$2 = [\n    'gdGap',\n    'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n    'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n    'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\nconst selector$2 = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\nclass DefaultGridGapDirective extends GridGapDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultGridGapDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridGapDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridGapDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridGapDirective, selector: \"\\n  [gdGap],\\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\\n\", inputs: { gdGap: \"gdGap\", \"gdGap.xs\": \"gdGap.xs\", \"gdGap.sm\": \"gdGap.sm\", \"gdGap.md\": \"gdGap.md\", \"gdGap.lg\": \"gdGap.lg\", \"gdGap.xl\": \"gdGap.xl\", \"gdGap.lt-sm\": \"gdGap.lt-sm\", \"gdGap.lt-md\": \"gdGap.lt-md\", \"gdGap.lt-lg\": \"gdGap.lt-lg\", \"gdGap.lt-xl\": \"gdGap.lt-xl\", \"gdGap.gt-xs\": \"gdGap.gt-xs\", \"gdGap.gt-sm\": \"gdGap.gt-sm\", \"gdGap.gt-md\": \"gdGap.gt-md\", \"gdGap.gt-lg\": \"gdGap.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridGapDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE$1 = 'auto';\nclass GridRowStyleBuilder extends StyleBuilder {\n    buildStyles(input) {\n        return { 'grid-row': input || DEFAULT_VALUE$1 };\n    }\n}\nGridRowStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridRowStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridRowDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-row';\n        this.styleCache = rowCache;\n        this.init();\n    }\n}\nGridRowDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowDirective, deps: [{ token: i0.ElementRef }, { token: GridRowStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridRowDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridRowDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridRowStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; } });\nconst rowCache = new Map();\nconst inputs$1 = [\n    'gdRow',\n    'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n    'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n    'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\nconst selector$1 = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nclass DefaultGridRowDirective extends GridRowDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultGridRowDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridRowDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridRowDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridRowDirective, selector: \"\\n  [gdRow],\\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\\n\", inputs: { gdRow: \"gdRow\", \"gdRow.xs\": \"gdRow.xs\", \"gdRow.sm\": \"gdRow.sm\", \"gdRow.md\": \"gdRow.md\", \"gdRow.lg\": \"gdRow.lg\", \"gdRow.xl\": \"gdRow.xl\", \"gdRow.lt-sm\": \"gdRow.lt-sm\", \"gdRow.lt-md\": \"gdRow.lt-md\", \"gdRow.lt-lg\": \"gdRow.lt-lg\", \"gdRow.lt-xl\": \"gdRow.lt-xl\", \"gdRow.gt-xs\": \"gdRow.gt-xs\", \"gdRow.gt-sm\": \"gdRow.gt-sm\", \"gdRow.gt-md\": \"gdRow.gt-md\", \"gdRow.gt-lg\": \"gdRow.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridRowDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\nclass GridRowsStyleBuilder extends StyleBuilder {\n    buildStyles(input, parent) {\n        input = input || DEFAULT_VALUE;\n        let auto = false;\n        if (input.endsWith(AUTO_SPECIFIER)) {\n            input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n            auto = true;\n        }\n        const css = {\n            'display': parent.inline ? 'inline-grid' : 'grid',\n            'grid-auto-rows': '',\n            'grid-template-rows': '',\n        };\n        const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n        css[key] = input;\n        return css;\n    }\n}\nGridRowsStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowsStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nGridRowsStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowsStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowsStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass GridRowsDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.DIRECTIVE_KEY = 'grid-rows';\n        this._inline = false;\n        this.init();\n    }\n    get inline() { return this._inline; }\n    set inline(val) { this._inline = coerceBooleanProperty(val); }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    updateWithValue(value) {\n        this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n        this.addStyles(value, { inline: this.inline });\n    }\n}\nGridRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowsDirective, deps: [{ token: i0.ElementRef }, { token: GridRowsStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }], target: i0.ɵɵFactoryTarget.Directive });\nGridRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: GridRowsDirective, inputs: { inline: [\"gdInline\", \"inline\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridRowsDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: GridRowsStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }]; }, propDecorators: { inline: [{\n                type: Input,\n                args: ['gdInline']\n            }] } });\nconst rowsCache = new Map();\nconst rowsInlineCache = new Map();\nconst inputs = [\n    'gdRows',\n    'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n    'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n    'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nclass DefaultGridRowsDirective extends GridRowsDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultGridRowsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridRowsDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultGridRowsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: DefaultGridRowsDirective, selector: \"\\n  [gdRows],\\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\\n\", inputs: { gdRows: \"gdRows\", \"gdRows.xs\": \"gdRows.xs\", \"gdRows.sm\": \"gdRows.sm\", \"gdRows.md\": \"gdRows.md\", \"gdRows.lg\": \"gdRows.lg\", \"gdRows.xl\": \"gdRows.xl\", \"gdRows.lt-sm\": \"gdRows.lt-sm\", \"gdRows.lt-md\": \"gdRows.lt-md\", \"gdRows.lt-lg\": \"gdRows.lt-lg\", \"gdRows.lt-xl\": \"gdRows.lt-xl\", \"gdRows.gt-xs\": \"gdRows.gt-xs\", \"gdRows.gt-sm\": \"gdRows.gt-sm\", \"gdRows.gt-md\": \"gdRows.gt-md\", \"gdRows.gt-lg\": \"gdRows.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: DefaultGridRowsDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultGridAlignDirective,\n    DefaultGridAlignColumnsDirective,\n    DefaultGridAlignRowsDirective,\n    DefaultGridAreaDirective,\n    DefaultGridAreasDirective,\n    DefaultGridAutoDirective,\n    DefaultGridColumnDirective,\n    DefaultGridColumnsDirective,\n    DefaultGridGapDirective,\n    DefaultGridRowDirective,\n    DefaultGridRowsDirective,\n];\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\nclass GridModule {\n}\nGridModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGridModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridModule, declarations: [DefaultGridAlignDirective,\n        DefaultGridAlignColumnsDirective,\n        DefaultGridAlignRowsDirective,\n        DefaultGridAreaDirective,\n        DefaultGridAreasDirective,\n        DefaultGridAutoDirective,\n        DefaultGridColumnDirective,\n        DefaultGridColumnsDirective,\n        DefaultGridGapDirective,\n        DefaultGridRowDirective,\n        DefaultGridRowsDirective], imports: [CoreModule], exports: [DefaultGridAlignDirective,\n        DefaultGridAlignColumnsDirective,\n        DefaultGridAlignRowsDirective,\n        DefaultGridAreaDirective,\n        DefaultGridAreasDirective,\n        DefaultGridAutoDirective,\n        DefaultGridColumnDirective,\n        DefaultGridColumnsDirective,\n        DefaultGridGapDirective,\n        DefaultGridRowDirective,\n        DefaultGridRowsDirective] });\nGridModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridModule, imports: [[CoreModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: GridModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultGridAlignColumnsDirective, DefaultGridAlignDirective, DefaultGridAlignRowsDirective, DefaultGridAreaDirective, DefaultGridAreasDirective, DefaultGridAutoDirective, DefaultGridColumnDirective, DefaultGridColumnsDirective, DefaultGridGapDirective, DefaultGridRowDirective, DefaultGridRowsDirective, GridAlignColumnsDirective, GridAlignColumnsStyleBuilder, GridAlignDirective, GridAlignRowsDirective, GridAlignRowsStyleBuilder, GridAlignStyleBuilder, GridAreaDirective, GridAreaStyleBuilder, GridAreasDirective, GridAreasStyleBuiler, GridAutoDirective, GridAutoStyleBuilder, GridColumnDirective, GridColumnStyleBuilder, GridColumnsDirective, GridColumnsStyleBuilder, GridGapDirective, GridGapStyleBuilder, GridModule, GridRowDirective, GridRowStyleBuilder, GridRowsDirective, GridRowsStyleBuilder };\n"]},"metadata":{},"sourceType":"module"}