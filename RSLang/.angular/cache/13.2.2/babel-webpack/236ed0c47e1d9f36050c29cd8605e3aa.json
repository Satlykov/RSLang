{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Version, PLATFORM_ID, NgModule, Inject } from '@angular/core';\nimport { LAYOUT_CONFIG, DEFAULT_CONFIG, BREAKPOINT, SERVER_TOKEN } from '@angular/flex-layout/core';\nexport * from '@angular/flex-layout/core';\nimport { ExtendedModule } from '@angular/flex-layout/extended';\nexport * from '@angular/flex-layout/extended';\nimport { FlexModule } from '@angular/flex-layout/flex';\nexport * from '@angular/flex-layout/flex';\nimport { GridModule } from '@angular/flex-layout/grid';\nexport * from '@angular/flex-layout/grid';\nimport { isPlatformServer } from '@angular/common';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Current version of Angular Flex-Layout. */\n\nconst VERSION = new Version('13.0.0-beta.38');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n\nclass FlexLayoutModule {\n  constructor(serverModuleLoaded, platformId) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n\n\n  static withConfig(configOptions, // tslint:disable-next-line:max-line-length\n  breakpoints = []) {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ? [{\n        provide: LAYOUT_CONFIG,\n        useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions)\n      }, {\n        provide: BREAKPOINT,\n        useValue: breakpoints,\n        multi: true\n      }, {\n        provide: SERVER_TOKEN,\n        useValue: true\n      }] : [{\n        provide: LAYOUT_CONFIG,\n        useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions)\n      }, {\n        provide: BREAKPOINT,\n        useValue: breakpoints,\n        multi: true\n      }]\n    };\n  }\n\n}\n\nFlexLayoutModule.ɵfac = function FlexLayoutModule_Factory(t) {\n  return new (t || FlexLayoutModule)(i0.ɵɵinject(SERVER_TOKEN), i0.ɵɵinject(PLATFORM_ID));\n};\n\nFlexLayoutModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FlexLayoutModule\n});\nFlexLayoutModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[FlexModule, ExtendedModule, GridModule], FlexModule, ExtendedModule, GridModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FlexLayoutModule, [{\n    type: NgModule,\n    args: [{\n      imports: [FlexModule, ExtendedModule, GridModule],\n      exports: [FlexModule, ExtendedModule, GridModule]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FlexLayoutModule, VERSION };","map":{"version":3,"sources":["D:/RSLang/RSLang/node_modules/@angular/flex-layout/fesm2015/angular-flex-layout.mjs"],"names":["i0","Version","PLATFORM_ID","NgModule","Inject","LAYOUT_CONFIG","DEFAULT_CONFIG","BREAKPOINT","SERVER_TOKEN","ExtendedModule","FlexModule","GridModule","isPlatformServer","VERSION","FlexLayoutModule","constructor","serverModuleLoaded","platformId","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","useValue","Object","assign","multi","ɵfac","ɵmod","ɵinj","type","args","imports","exports","undefined","decorators"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Version, PLATFORM_ID, NgModule, Inject } from '@angular/core';\nimport { LAYOUT_CONFIG, DEFAULT_CONFIG, BREAKPOINT, SERVER_TOKEN } from '@angular/flex-layout/core';\nexport * from '@angular/flex-layout/core';\nimport { ExtendedModule } from '@angular/flex-layout/extended';\nexport * from '@angular/flex-layout/extended';\nimport { FlexModule } from '@angular/flex-layout/flex';\nexport * from '@angular/flex-layout/flex';\nimport { GridModule } from '@angular/flex-layout/grid';\nexport * from '@angular/flex-layout/grid';\nimport { isPlatformServer } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Flex-Layout. */\nconst VERSION = new Version('13.0.0-beta.38');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\nclass FlexLayoutModule {\n    constructor(serverModuleLoaded, platformId) {\n        if (isPlatformServer(platformId) && !serverModuleLoaded) {\n            console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n        }\n    }\n    /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     */\n    static withConfig(configOptions, \n    // tslint:disable-next-line:max-line-length\n    breakpoints = []) {\n        return {\n            ngModule: FlexLayoutModule,\n            providers: configOptions.serverLoaded ?\n                [\n                    { provide: LAYOUT_CONFIG, useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions) },\n                    { provide: BREAKPOINT, useValue: breakpoints, multi: true },\n                    { provide: SERVER_TOKEN, useValue: true },\n                ] : [\n                { provide: LAYOUT_CONFIG, useValue: Object.assign(Object.assign({}, DEFAULT_CONFIG), configOptions) },\n                { provide: BREAKPOINT, useValue: breakpoints, multi: true },\n            ]\n        };\n    }\n}\nFlexLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexLayoutModule, deps: [{ token: SERVER_TOKEN }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.NgModule });\nFlexLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexLayoutModule, imports: [FlexModule, ExtendedModule, GridModule], exports: [FlexModule, ExtendedModule, GridModule] });\nFlexLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexLayoutModule, imports: [[FlexModule, ExtendedModule, GridModule], FlexModule, ExtendedModule, GridModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: FlexLayoutModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [FlexModule, ExtendedModule, GridModule],\n                    exports: [FlexModule, ExtendedModule, GridModule]\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [SERVER_TOKEN]\n                    }] }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FlexLayoutModule, VERSION };\n"]},"metadata":{},"sourceType":"module"}